{"version":3,"file":"view.js","mappings":"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","sources":["webpack://reservoir-levels-widget/./src/view.js"],"sourcesContent":["/* eslint-disable no-console */\r\nconsole.log(\r\n    'Hello World! (from create-block-reservoir-levels-widget block by SAFEgroup Automation, Monique Kuhn)'\r\n);\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    // Select all reservoir elements\r\n    const reservoirs = document.querySelectorAll(\".reservoir\");\r\n\r\n    reservoirs.forEach((reservoir) => {\r\n        // Extract percentage value from the `.level` element\r\n        const percentage = parseFloat(\r\n            reservoir.querySelector(\".level\").textContent.replace(\"%\", \"\")\r\n        );\r\n\r\n        // Create a `reservoir-fill` div to visually represent the fill level\r\n        let fill = document.createElement(\"div\");\r\n        fill.classList.add(\"reservoir-fill\");\r\n        reservoir.appendChild(fill);\r\n\r\n        // Set the height of the `reservoir-fill` to match the percentage\r\n        setTimeout(() => {\r\n            fill.style.height = `${percentage}%`;\r\n        }, 100); // Slight delay for smooth animation\r\n    });\r\n\r\n    // Blue dot hover functionality for the map\r\n    const blueDot = document.querySelector(\".blue-dot\");\r\n    const svgElement = document.querySelector(\".map-container svg\");\r\n\r\n    // Calculate the blue dot position relative to the reservoir's data attributes\r\n    const calculateDotPosition = (reservoir) => {\r\n        const xPercent = parseFloat(reservoir.getAttribute(\"data-x\"));\r\n        const yPercent = parseFloat(reservoir.getAttribute(\"data-y\"));\r\n\r\n        const svgWidth = svgElement.getBoundingClientRect().width;\r\n        const svgHeight = svgElement.getBoundingClientRect().height;\r\n\r\n        // Convert percentage-based coordinates to pixel positions\r\n        const x = (xPercent / 100) * svgWidth;\r\n        const y = (yPercent / 100) * svgHeight;\r\n\r\n        return { x, y };\r\n    };\r\n\r\n    // Show the blue dot when hovering over a reservoir\r\n    const handleMouseEnter = (reservoir) => {\r\n        const { x, y } = calculateDotPosition(reservoir);\r\n\r\n        // Position and display the blue dot\r\n        if (blueDot) {\r\n            blueDot.style.left = `${x}px`;\r\n            blueDot.style.top = `${y}px`;\r\n            blueDot.style.transform = \"scale(1)\";\r\n        }\r\n    };\r\n\r\n    // Hide the blue dot when the mouse leaves a reservoir\r\n    const handleMouseLeave = () => {\r\n        if (blueDot) {\r\n            blueDot.style.transform = \"scale(0)\";\r\n        }\r\n    };\r\n\r\n    reservoirs.forEach((reservoir) => {\r\n        // Skip hover events for the total reservoir section\r\n        if (reservoir.classList.contains(\"total-reservoir\")) {\r\n            return;\r\n        }\r\n\r\n        // Add hover events for desktop interaction\r\n        reservoir.addEventListener(\"mouseenter\", () => handleMouseEnter(reservoir));\r\n        reservoir.addEventListener(\"mouseleave\", handleMouseLeave);\r\n\r\n        // Add click events for touch device interaction\r\n        reservoir.addEventListener(\"click\", () => {\r\n            if (blueDot.style.transform === \"scale(1)\") {\r\n                handleMouseLeave();\r\n            } else {\r\n                handleMouseEnter(reservoir);\r\n            }\r\n        });\r\n    });\r\n\r\n    // Recalculate blue dot position on window resize\r\n    window.addEventListener(\"resize\", () => {\r\n        const activeReservoir = document.querySelector(\".reservoir:hover\");\r\n\r\n        if (activeReservoir && !activeReservoir.classList.contains(\"total-reservoir\")) {\r\n            const { x, y } = calculateDotPosition(activeReservoir);\r\n\r\n            // Update the blue dot position based on the resized window\r\n            if (blueDot) {\r\n                blueDot.style.left = `${x}px`;\r\n                blueDot.style.top = `${y}px`;\r\n            }\r\n        }\r\n    });\r\n});\r\n"],"names":["console","log","document","addEventListener","reservoirs","querySelectorAll","forEach","reservoir","percentage","parseFloat","querySelector","textContent","replace","fill","createElement","classList","add","appendChild","setTimeout","style","height","blueDot","svgElement","calculateDotPosition","xPercent","getAttribute","yPercent","svgWidth","getBoundingClientRect","width","svgHeight","x","y","handleMouseEnter","left","top","transform","handleMouseLeave","contains","window","activeReservoir"],"sourceRoot":""}